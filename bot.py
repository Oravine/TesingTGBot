import os
from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    InlineQueryResultArticle,
    InputTextMessageContent
)
from telegram.ext import (
    Updater,
    CommandHandler,
    CallbackQueryHandler,
    CallbackContext,
    InlineQueryHandler
)

TOKEN = os.getenv("BOT_TOKEN")

def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    update.message.reply_text("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω —Ä–µ–∂–∏–º: @PM_ChBot")

def handle_inline_button(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    data = query.data.split(":")
    
    if len(data) != 4:
        query.answer("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏")
        return

    _, sender_id, recipient_username, message_text = data
    current_user = query.from_user

    try:
        sender_id = int(sender_id)
    except ValueError:
        query.answer("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π ID –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫—Ç–æ –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É (–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∏–ª–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—å)
    if (current_user.username and current_user.username.lower() == recipient_username.lower()) or current_user.id == sender_id:
        query.answer(message_text, show_alert=True)
    else:
        query.answer("‚ö†Ô∏èüîí –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –¥–ª—è –≤–∞—Å.", show_alert=True)

def handle_inline_query(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω-–∑–∞–ø—Ä–æ—Å–æ–≤"""
    query_text = update.inline_query.query.strip()
    
    if not query_text:
        return

    # –†–∞–∑–±–∏–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
    parts = query_text.split(maxsplit=1)
    if len(parts) < 2:
        return

    recipient_username, message_text = parts
    recipient_username = recipient_username.lstrip('@')  # –£–¥–∞–ª—è–µ–º @ –µ—Å–ª–∏ –µ—Å—Ç—å

    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –∏–Ω–ª–∞–π–Ω-—Ä–µ–∂–∏–º–∞
    results = [
        InlineQueryResultArticle(
            id="1",
            title=f"–û—Ç–ø—Ä–∞–≤–∏—Ç—å {recipient_username}",
            description=message_text[:100],  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            input_message_content=InputTextMessageContent(
                f"**üîí –õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è @{recipient_username}.**\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ—á–∏—Ç–∞—Ç—å –µ–≥–æ. __–°–æ–æ–±—â–µ–Ω–∏–µ —É–≤–∏–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –≤—ã.__"
            ),
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton(
                    "üì© –ü—Ä–æ—á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ",
                    callback_data=f"msg:{update.inline_query.from_user.id}:{recipient_username}:{message_text}"
                )
            ]])
        )
    ]

    update.inline_query.answer(results)

def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    updater = Updater(TOKEN)
    dispatcher = updater.dispatcher

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CallbackQueryHandler(handle_inline_button))
    dispatcher.add_handler(InlineQueryHandler(handle_inline_query))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
